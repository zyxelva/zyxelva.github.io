const fs=require("fs"),fse=require("fs-extra"),path=require("path"),imageSize=require("image-size"),rootPath="/Users/zyxelva/Documents/MyGit/picgo/images/";class PhotoExtension{constructor(){this.size=64,this.offset=[0,0]}}class Photo{constructor(){this.dirName="",this.fileName="",this.iconID="",this.extension=new PhotoExtension}}class PhotoGroup{constructor(){this.name="",this.photos=[]}}function createPlotIconsData(){let o=[],e=[];console.log("dirname: "+__dirname);const t=path.join(__dirname,"./photosInfo.json"),s=path.join(__dirname+"/../_data","./galleries.json");fs.existsSync(t)&&(o=JSON.parse(fs.readFileSync(t,{encoding:"utf8"}))),fs.existsSync(s)&&(e=JSON.parse(fs.readFileSync(s,{encoding:"utf8"}))),fs.readdirSync(rootPath).forEach(function(t){if(fs.statSync(path.join(rootPath,t)).isDirectory()&&".DS_Store"!==t){fs.readdirSync(path.join(rootPath,t)).forEach(function(s){if(!o.find(o=>o.fileName===s&&o.dirName===t)&&".DS_Store"!==s){const i=new Photo;i.dirName=t,i.fileName=s;const n=imageSize(rootPath+t+"/"+s);i.iconID=n.width+"."+n.height+" "+s,o.push(i),console.log("RD: createPlotIconsData -> new plot",i);let a=e.find(o=>o.name===t);a||(a=new PhotoGroup,a.name=t,a.cover=t+"/"+s,a.description=t,e.push(a),console.log("RD: createPlotIconsData -> new group",a)),a.photos.push(i.dirName+"/"+i.fileName)}})}}),fse.writeJsonSync(t,o),fse.writeJsonSync(s,e)}createPlotIconsData();